/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-05-27 16:00:31 UTC)
 * on 2016-07-07 at 09:59:51 UTC 
 * Modify at your own risk.
 */

package com.mulesoft.arc.arcdatastore.backend.arcSessions;

/**
 * Service definition for ArcSessions (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ArcSessionsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ArcSessions extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the arcSessions library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "arcSessions/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ArcSessions(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ArcSessions(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "query".
   *
   * This request holds the parameters needed by the arcSessions server.  After setting any optional
   * parameters, call the {@link Query#execute()} method to invoke the remote operation.
   *
   * @param endDate
   * @param startDate
   * @return the request
   */
  public Query query(com.google.api.client.util.DateTime endDate, com.google.api.client.util.DateTime startDate) throws java.io.IOException {
    Query result = new Query(endDate, startDate);
    initialize(result);
    return result;
  }

  public class Query extends ArcSessionsRequest<com.mulesoft.arc.arcdatastore.backend.arcSessions.model.QueryResult> {

    private static final String REST_PATH = "query";

    /**
     * Create a request for the method "query".
     *
     * This request holds the parameters needed by the the arcSessions server.  After setting any
     * optional parameters, call the {@link Query#execute()} method to invoke the remote operation.
     * <p> {@link
     * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param endDate
     * @param startDate
     * @since 1.13
     */
    protected Query(com.google.api.client.util.DateTime endDate, com.google.api.client.util.DateTime startDate) {
      super(ArcSessions.this, "GET", REST_PATH, null, com.mulesoft.arc.arcdatastore.backend.arcSessions.model.QueryResult.class);
      this.endDate = com.google.api.client.util.Preconditions.checkNotNull(endDate, "Required parameter endDate must be specified.");
      this.startDate = com.google.api.client.util.Preconditions.checkNotNull(startDate, "Required parameter startDate must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Query setAlt(java.lang.String alt) {
      return (Query) super.setAlt(alt);
    }

    @Override
    public Query setFields(java.lang.String fields) {
      return (Query) super.setFields(fields);
    }

    @Override
    public Query setKey(java.lang.String key) {
      return (Query) super.setKey(key);
    }

    @Override
    public Query setOauthToken(java.lang.String oauthToken) {
      return (Query) super.setOauthToken(oauthToken);
    }

    @Override
    public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Query) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Query setQuotaUser(java.lang.String quotaUser) {
      return (Query) super.setQuotaUser(quotaUser);
    }

    @Override
    public Query setUserIp(java.lang.String userIp) {
      return (Query) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime endDate;

    /**

     */
    public com.google.api.client.util.DateTime getEndDate() {
      return endDate;
    }

    public Query setEndDate(com.google.api.client.util.DateTime endDate) {
      this.endDate = endDate;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime startDate;

    /**

     */
    public com.google.api.client.util.DateTime getStartDate() {
      return startDate;
    }

    public Query setStartDate(com.google.api.client.util.DateTime startDate) {
      this.startDate = startDate;
      return this;
    }

    @Override
    public Query set(String parameterName, Object value) {
      return (Query) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "query2".
   *
   * This request holds the parameters needed by the arcSessions server.  After setting any optional
   * parameters, call the {@link Query2#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Query2 query2() throws java.io.IOException {
    Query2 result = new Query2();
    initialize(result);
    return result;
  }

  public class Query2 extends ArcSessionsRequest<com.mulesoft.arc.arcdatastore.backend.arcSessions.model.QueryResult> {

    private static final String REST_PATH = "query2";

    /**
     * Create a request for the method "query2".
     *
     * This request holds the parameters needed by the the arcSessions server.  After setting any
     * optional parameters, call the {@link Query2#execute()} method to invoke the remote operation.
     * <p> {@link
     * Query2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Query2() {
      super(ArcSessions.this, "GET", REST_PATH, null, com.mulesoft.arc.arcdatastore.backend.arcSessions.model.QueryResult.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Query2 setAlt(java.lang.String alt) {
      return (Query2) super.setAlt(alt);
    }

    @Override
    public Query2 setFields(java.lang.String fields) {
      return (Query2) super.setFields(fields);
    }

    @Override
    public Query2 setKey(java.lang.String key) {
      return (Query2) super.setKey(key);
    }

    @Override
    public Query2 setOauthToken(java.lang.String oauthToken) {
      return (Query2) super.setOauthToken(oauthToken);
    }

    @Override
    public Query2 setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Query2) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Query2 setQuotaUser(java.lang.String quotaUser) {
      return (Query2) super.setQuotaUser(quotaUser);
    }

    @Override
    public Query2 setUserIp(java.lang.String userIp) {
      return (Query2) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime startDate;

    /**

     */
    public com.google.api.client.util.DateTime getStartDate() {
      return startDate;
    }

    public Query2 setStartDate(com.google.api.client.util.DateTime startDate) {
      this.startDate = startDate;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime endDate;

    /**

     */
    public com.google.api.client.util.DateTime getEndDate() {
      return endDate;
    }

    public Query2 setEndDate(com.google.api.client.util.DateTime endDate) {
      this.endDate = endDate;
      return this;
    }

    @Override
    public Query2 set(String parameterName, Object value) {
      return (Query2) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "record".
   *
   * This request holds the parameters needed by the arcSessions server.  After setting any optional
   * parameters, call the {@link Record#execute()} method to invoke the remote operation.
   *
   * @param ai
   * @return the request
   */
  public Record record(java.lang.String ai) throws java.io.IOException {
    Record result = new Record(ai);
    initialize(result);
    return result;
  }

  public class Record extends ArcSessionsRequest<com.mulesoft.arc.arcdatastore.backend.arcSessions.model.InsertResult> {

    private static final String REST_PATH = "record/{ai}";

    /**
     * Create a request for the method "record".
     *
     * This request holds the parameters needed by the the arcSessions server.  After setting any
     * optional parameters, call the {@link Record#execute()} method to invoke the remote operation.
     * <p> {@link
     * Record#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ai
     * @since 1.13
     */
    protected Record(java.lang.String ai) {
      super(ArcSessions.this, "POST", REST_PATH, null, com.mulesoft.arc.arcdatastore.backend.arcSessions.model.InsertResult.class);
      this.ai = com.google.api.client.util.Preconditions.checkNotNull(ai, "Required parameter ai must be specified.");
    }

    @Override
    public Record setAlt(java.lang.String alt) {
      return (Record) super.setAlt(alt);
    }

    @Override
    public Record setFields(java.lang.String fields) {
      return (Record) super.setFields(fields);
    }

    @Override
    public Record setKey(java.lang.String key) {
      return (Record) super.setKey(key);
    }

    @Override
    public Record setOauthToken(java.lang.String oauthToken) {
      return (Record) super.setOauthToken(oauthToken);
    }

    @Override
    public Record setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Record) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Record setQuotaUser(java.lang.String quotaUser) {
      return (Record) super.setQuotaUser(quotaUser);
    }

    @Override
    public Record setUserIp(java.lang.String userIp) {
      return (Record) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ai;

    /**

     */
    public java.lang.String getAi() {
      return ai;
    }

    public Record setAi(java.lang.String ai) {
      this.ai = ai;
      return this;
    }

    @Override
    public Record set(String parameterName, Object value) {
      return (Record) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "record2".
   *
   * This request holds the parameters needed by the arcSessions server.  After setting any optional
   * parameters, call the {@link Record2#execute()} method to invoke the remote operation.
   *
   * @param ai
   * @return the request
   */
  public Record2 record2(java.lang.String ai) throws java.io.IOException {
    Record2 result = new Record2(ai);
    initialize(result);
    return result;
  }

  public class Record2 extends ArcSessionsRequest<com.mulesoft.arc.arcdatastore.backend.arcSessions.model.InsertResult> {

    private static final String REST_PATH = "record2/{ai}";

    /**
     * Create a request for the method "record2".
     *
     * This request holds the parameters needed by the the arcSessions server.  After setting any
     * optional parameters, call the {@link Record2#execute()} method to invoke the remote operation.
     * <p> {@link
     * Record2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param ai
     * @since 1.13
     */
    protected Record2(java.lang.String ai) {
      super(ArcSessions.this, "POST", REST_PATH, null, com.mulesoft.arc.arcdatastore.backend.arcSessions.model.InsertResult.class);
      this.ai = com.google.api.client.util.Preconditions.checkNotNull(ai, "Required parameter ai must be specified.");
    }

    @Override
    public Record2 setAlt(java.lang.String alt) {
      return (Record2) super.setAlt(alt);
    }

    @Override
    public Record2 setFields(java.lang.String fields) {
      return (Record2) super.setFields(fields);
    }

    @Override
    public Record2 setKey(java.lang.String key) {
      return (Record2) super.setKey(key);
    }

    @Override
    public Record2 setOauthToken(java.lang.String oauthToken) {
      return (Record2) super.setOauthToken(oauthToken);
    }

    @Override
    public Record2 setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Record2) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Record2 setQuotaUser(java.lang.String quotaUser) {
      return (Record2) super.setQuotaUser(quotaUser);
    }

    @Override
    public Record2 setUserIp(java.lang.String userIp) {
      return (Record2) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String ai;

    /**

     */
    public java.lang.String getAi() {
      return ai;
    }

    public Record2 setAi(java.lang.String ai) {
      this.ai = ai;
      return this;
    }

    @Override
    public Record2 set(String parameterName, Object value) {
      return (Record2) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ArcSessions}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ArcSessions}. */
    @Override
    public ArcSessions build() {
      return new ArcSessions(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ArcSessionsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setArcSessionsRequestInitializer(
        ArcSessionsRequestInitializer arcsessionsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(arcsessionsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
